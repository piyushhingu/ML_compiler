Grammar

    0 $accept: program $end

    1 program: class_def methods

    2 class_def: CLASS class_name LPAREN NN_MODULE RPAREN COLON constructor

    3 class_name: IDENTIFIER

    4 constructor: DEF INIT LPAREN SELF COMMA param_list RPAREN COLON super_call layers_definition

    5 param_list: IDENTIFIER
    6           | param_list COMMA IDENTIFIER

    7 super_call: SUPER LPAREN class_name COMMA SELF RPAREN DOT INIT LPAREN RPAREN

    8 layers_definition: layer_definition_full layers_definition
    9                  | ε

   10 layer_definition_full: SELF DOT layer_name EQUALS layer_definition

   11 layer_definition: layer_type layer_args
   12                 | sequential_layer

   13 layer_args: LPAREN nested_layer_params RPAREN

   14 nested_layer_params: layer_param_list
   15                    | ε

   16 layer_param_list: layer_param
   17                 | layer_param_list COMMA layer_param

   18 layer_param: param_name EQUALS value
   19            | value

   20 param_name: IDENTIFIER

   21 numeric_literal: INTEGER
   22                | FLOAT
   23                | MULTIPLY INTEGER

   24 arithmetic_expression: numeric_literal
   25                      | arithmetic_expression MULTIPLY numeric_literal

   26 numeric_value: numeric_literal
   27              | LPAREN arithmetic_expression RPAREN

   28 value: numeric_value
   29      | STRING
   30      | var

   31 methods: method_definition methods
   32        | ε

   33 method_definition: DEF method_name LPAREN method_params RPAREN COLON method_body

   34 method_name: FORWARD
   35            | RESHAPE
   36            | IDENTIFIER

   37 method_params: SELF
   38              | SELF COMMA param_list

   39 method_body: statement method_body
   40            | RETURN var
   41            | RETURN method_call_base
   42            | RETURN method_call
   43            | RETURN reshape_operation
   44            | ε

   45 statement: var EQUALS expression

   46 var: IDENTIFIER
   47    | var DOT IDENTIFIER

   48 expression: method_call
   49           | method_call_base
   50           | reshape_operation

   51 method_call: SELF DOT layer_name LPAREN arguments RPAREN

   52 method_call_base: var DOT method_name LPAREN arguments RPAREN
   53                 | F_MAXPOOL2D LPAREN arguments RPAREN
   54                 | F_RELU LPAREN arguments RPAREN
   55                 | F_VIEW LPAREN arguments RPAREN

   56 reshape_operation: var DOT F_VIEW LPAREN arguments RPAREN

   57 argument: numeric_literal
   58         | STRING
   59         | var
   60         | method_call_base
   61         | method_call
   62         | reshape_operation
   63         | LPAREN argument COMMA argument RPAREN
   64         | LPAREN argument RPAREN

   65 sequential_layer: SEQUENTIAL LPAREN sequential_layer_content RPAREN

   66 sequential_layer_content: layer_definition
   67                         | layer_definition COMMA sequential_layer_content
   68                         | LPAREN layer_definition RPAREN
   69                         | LPAREN layer_definition RPAREN COMMA sequential_layer_content
   70                         | ε

   71 layer_type: CONV2D
   72           | BATCHNORM2D
   73           | RELU
   74           | MAXPOOL2D
   75           | LINEAR
   76           | SOFTMAX

   77 layer_name: IDENTIFIER

   78 arguments: argument
   79          | argument COMMA arguments


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CLASS (258) 2
    NN_MODULE (259) 2
    DEF (260) 4 33
    SUPER (261) 7
    INIT (262) 4 7
    SELF (263) 4 7 10 37 38 51
    FORWARD (264) 34
    EQUALS (265) 10 18 45
    LPAREN (266) 2 4 7 13 27 33 51 52 53 54 55 56 63 64 65 68 69
    RPAREN (267) 2 4 7 13 27 33 51 52 53 54 55 56 63 64 65 68 69
    COLON (268) 2 4 33
    COMMA (269) 4 6 7 17 38 63 67 69 79
    DOT (270) 7 10 47 51 52 56
    RESHAPE (271) 35
    SEQUENTIAL (272) 65
    CONV2D (273) 71
    BATCHNORM2D (274) 72
    RELU (275) 73
    MAXPOOL2D (276) 74
    LINEAR (277) 75
    MULTIPLY (278) 23 25
    RETURN (279) 40 41 42 43
    INTEGER <sval> (280) 21 23
    FLOAT <sval> (281) 22
    STRING <sval> (282) 29 58
    IDENTIFIER <sval> (283) 3 5 6 20 36 46 47 77
    F_MAXPOOL2D (284) 53
    F_RELU (285) 54
    F_VIEW (286) 55 56
    SOFTMAX (287) 76


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program <node> (34)
        on left: 1
        on right: 0
    class_def <node> (35)
        on left: 2
        on right: 1
    class_name <sval> (36)
        on left: 3
        on right: 2 7
    constructor <node> (37)
        on left: 4
        on right: 2
    param_list <sval> (38)
        on left: 5 6
        on right: 4 6 38
    super_call (39)
        on left: 7
        on right: 4
    layers_definition <node> (40)
        on left: 8 9
        on right: 4 8
    layer_definition_full <node> (41)
        on left: 10
        on right: 8
    layer_definition <node> (42)
        on left: 11 12
        on right: 10 66 67 68 69
    layer_args <sval> (43)
        on left: 13
        on right: 11
    nested_layer_params <sval> (44)
        on left: 14 15
        on right: 13
    layer_param_list <sval> (45)
        on left: 16 17
        on right: 14 17
    layer_param <sval> (46)
        on left: 18 19
        on right: 16 17
    param_name <sval> (47)
        on left: 20
        on right: 18
    numeric_literal <sval> (48)
        on left: 21 22 23
        on right: 24 25 26 57
    arithmetic_expression <sval> (49)
        on left: 24 25
        on right: 25 27
    numeric_value <sval> (50)
        on left: 26 27
        on right: 28
    value <sval> (51)
        on left: 28 29 30
        on right: 18 19
    methods <node> (52)
        on left: 31 32
        on right: 1 31
    method_definition <node> (53)
        on left: 33
        on right: 31
    method_name <sval> (54)
        on left: 34 35 36
        on right: 33 52
    method_params <sval> (55)
        on left: 37 38
        on right: 33
    method_body <node> (56)
        on left: 39 40 41 42 43 44
        on right: 33 39
    statement <node> (57)
        on left: 45
        on right: 39
    var <sval> (58)
        on left: 46 47
        on right: 30 40 45 47 52 56 59
    expression <node> (59)
        on left: 48 49 50
        on right: 45
    method_call <node> (60)
        on left: 51
        on right: 42 48 61
    method_call_base <node> (61)
        on left: 52 53 54 55
        on right: 41 49 60
    reshape_operation <node> (62)
        on left: 56
        on right: 43 50 62
    argument <sval> (63)
        on left: 57 58 59 60 61 62 63 64
        on right: 63 64 78 79
    sequential_layer <node> (64)
        on left: 65
        on right: 12
    sequential_layer_content <node> (65)
        on left: 66 67 68 69 70
        on right: 65 67 69
    layer_type <sval> (66)
        on left: 71 72 73 74 75 76
        on right: 11
    layer_name <sval> (67)
        on left: 77
        on right: 10 51
    arguments <sval> (68)
        on left: 78 79
        on right: 51 52 53 54 55 56 79


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1

    program    go to state 2
    class_def  go to state 3


State 1

    2 class_def: CLASS • class_name LPAREN NN_MODULE RPAREN COLON constructor

    IDENTIFIER  shift, and go to state 4

    class_name  go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: class_def • methods

    DEF  shift, and go to state 7

    $default  reduce using rule 32 (methods)

    methods            go to state 8
    method_definition  go to state 9


State 4

    3 class_name: IDENTIFIER •

    $default  reduce using rule 3 (class_name)


State 5

    2 class_def: CLASS class_name • LPAREN NN_MODULE RPAREN COLON constructor

    LPAREN  shift, and go to state 10


State 6

    0 $accept: program $end •

    $default  accept


State 7

   33 method_definition: DEF • method_name LPAREN method_params RPAREN COLON method_body

    FORWARD     shift, and go to state 11
    RESHAPE     shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    method_name  go to state 14


State 8

    1 program: class_def methods •

    $default  reduce using rule 1 (program)


State 9

   31 methods: method_definition • methods

    DEF  shift, and go to state 7

    $default  reduce using rule 32 (methods)

    methods            go to state 15
    method_definition  go to state 9


State 10

    2 class_def: CLASS class_name LPAREN • NN_MODULE RPAREN COLON constructor

    NN_MODULE  shift, and go to state 16


State 11

   34 method_name: FORWARD •

    $default  reduce using rule 34 (method_name)


State 12

   35 method_name: RESHAPE •

    $default  reduce using rule 35 (method_name)


State 13

   36 method_name: IDENTIFIER •

    $default  reduce using rule 36 (method_name)


State 14

   33 method_definition: DEF method_name • LPAREN method_params RPAREN COLON method_body

    LPAREN  shift, and go to state 17


State 15

   31 methods: method_definition methods •

    $default  reduce using rule 31 (methods)


State 16

    2 class_def: CLASS class_name LPAREN NN_MODULE • RPAREN COLON constructor

    RPAREN  shift, and go to state 18


State 17

   33 method_definition: DEF method_name LPAREN • method_params RPAREN COLON method_body

    SELF  shift, and go to state 19

    method_params  go to state 20


State 18

    2 class_def: CLASS class_name LPAREN NN_MODULE RPAREN • COLON constructor

    COLON  shift, and go to state 21


State 19

   37 method_params: SELF •
   38              | SELF • COMMA param_list

    COMMA  shift, and go to state 22

    $default  reduce using rule 37 (method_params)


State 20

   33 method_definition: DEF method_name LPAREN method_params • RPAREN COLON method_body

    RPAREN  shift, and go to state 23


State 21

    2 class_def: CLASS class_name LPAREN NN_MODULE RPAREN COLON • constructor

    DEF  shift, and go to state 24

    constructor  go to state 25


State 22

   38 method_params: SELF COMMA • param_list

    IDENTIFIER  shift, and go to state 26

    param_list  go to state 27


State 23

   33 method_definition: DEF method_name LPAREN method_params RPAREN • COLON method_body

    COLON  shift, and go to state 28


State 24

    4 constructor: DEF • INIT LPAREN SELF COMMA param_list RPAREN COLON super_call layers_definition

    INIT  shift, and go to state 29


State 25

    2 class_def: CLASS class_name LPAREN NN_MODULE RPAREN COLON constructor •

    $default  reduce using rule 2 (class_def)


State 26

    5 param_list: IDENTIFIER •

    $default  reduce using rule 5 (param_list)


State 27

    6 param_list: param_list • COMMA IDENTIFIER
   38 method_params: SELF COMMA param_list •

    COMMA  shift, and go to state 30

    $default  reduce using rule 38 (method_params)


State 28

   33 method_definition: DEF method_name LPAREN method_params RPAREN COLON • method_body

    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 44 (method_body)

    method_body  go to state 33
    statement    go to state 34
    var          go to state 35


State 29

    4 constructor: DEF INIT • LPAREN SELF COMMA param_list RPAREN COLON super_call layers_definition

    LPAREN  shift, and go to state 36


State 30

    6 param_list: param_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 37


State 31

   40 method_body: RETURN • var
   41            | RETURN • method_call_base
   42            | RETURN • method_call
   43            | RETURN • reshape_operation

    SELF         shift, and go to state 38
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    var                go to state 42
    method_call        go to state 43
    method_call_base   go to state 44
    reshape_operation  go to state 45


State 32

   46 var: IDENTIFIER •

    $default  reduce using rule 46 (var)


State 33

   33 method_definition: DEF method_name LPAREN method_params RPAREN COLON method_body •

    $default  reduce using rule 33 (method_definition)


State 34

   39 method_body: statement • method_body

    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 44 (method_body)

    method_body  go to state 46
    statement    go to state 34
    var          go to state 35


State 35

   45 statement: var • EQUALS expression
   47 var: var • DOT IDENTIFIER

    EQUALS  shift, and go to state 47
    DOT     shift, and go to state 48


State 36

    4 constructor: DEF INIT LPAREN • SELF COMMA param_list RPAREN COLON super_call layers_definition

    SELF  shift, and go to state 49


State 37

    6 param_list: param_list COMMA IDENTIFIER •

    $default  reduce using rule 6 (param_list)


State 38

   51 method_call: SELF • DOT layer_name LPAREN arguments RPAREN

    DOT  shift, and go to state 50


State 39

   53 method_call_base: F_MAXPOOL2D • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 51


State 40

   54 method_call_base: F_RELU • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 52


State 41

   55 method_call_base: F_VIEW • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 53


State 42

   40 method_body: RETURN var •
   47 var: var • DOT IDENTIFIER
   52 method_call_base: var • DOT method_name LPAREN arguments RPAREN
   56 reshape_operation: var • DOT F_VIEW LPAREN arguments RPAREN

    DOT  shift, and go to state 54

    $default  reduce using rule 40 (method_body)


State 43

   42 method_body: RETURN method_call •

    $default  reduce using rule 42 (method_body)


State 44

   41 method_body: RETURN method_call_base •

    $default  reduce using rule 41 (method_body)


State 45

   43 method_body: RETURN reshape_operation •

    $default  reduce using rule 43 (method_body)


State 46

   39 method_body: statement method_body •

    $default  reduce using rule 39 (method_body)


State 47

   45 statement: var EQUALS • expression

    SELF         shift, and go to state 38
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    var                go to state 55
    expression         go to state 56
    method_call        go to state 57
    method_call_base   go to state 58
    reshape_operation  go to state 59


State 48

   47 var: var DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 60


State 49

    4 constructor: DEF INIT LPAREN SELF • COMMA param_list RPAREN COLON super_call layers_definition

    COMMA  shift, and go to state 61


State 50

   51 method_call: SELF DOT • layer_name LPAREN arguments RPAREN

    IDENTIFIER  shift, and go to state 62

    layer_name  go to state 63


State 51

   53 method_call_base: F_MAXPOOL2D LPAREN • arguments RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 74
    arguments          go to state 75


State 52

   54 method_call_base: F_RELU LPAREN • arguments RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 74
    arguments          go to state 76


State 53

   55 method_call_base: F_VIEW LPAREN • arguments RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 74
    arguments          go to state 77


State 54

   47 var: var DOT • IDENTIFIER
   52 method_call_base: var DOT • method_name LPAREN arguments RPAREN
   56 reshape_operation: var DOT • F_VIEW LPAREN arguments RPAREN

    FORWARD     shift, and go to state 11
    RESHAPE     shift, and go to state 12
    IDENTIFIER  shift, and go to state 78
    F_VIEW      shift, and go to state 79

    method_name  go to state 80


State 55

   47 var: var • DOT IDENTIFIER
   52 method_call_base: var • DOT method_name LPAREN arguments RPAREN
   56 reshape_operation: var • DOT F_VIEW LPAREN arguments RPAREN

    DOT  shift, and go to state 54


State 56

   45 statement: var EQUALS expression •

    $default  reduce using rule 45 (statement)


State 57

   48 expression: method_call •

    $default  reduce using rule 48 (expression)


State 58

   49 expression: method_call_base •

    $default  reduce using rule 49 (expression)


State 59

   50 expression: reshape_operation •

    $default  reduce using rule 50 (expression)


State 60

   47 var: var DOT IDENTIFIER •

    $default  reduce using rule 47 (var)


State 61

    4 constructor: DEF INIT LPAREN SELF COMMA • param_list RPAREN COLON super_call layers_definition

    IDENTIFIER  shift, and go to state 26

    param_list  go to state 81


State 62

   77 layer_name: IDENTIFIER •

    $default  reduce using rule 77 (layer_name)


State 63

   51 method_call: SELF DOT layer_name • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 82


State 64

   63 argument: LPAREN • argument COMMA argument RPAREN
   64         | LPAREN • argument RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 83


State 65

   23 numeric_literal: MULTIPLY • INTEGER

    INTEGER  shift, and go to state 84


State 66

   21 numeric_literal: INTEGER •

    $default  reduce using rule 21 (numeric_literal)


State 67

   22 numeric_literal: FLOAT •

    $default  reduce using rule 22 (numeric_literal)


State 68

   58 argument: STRING •

    $default  reduce using rule 58 (argument)


State 69

   57 argument: numeric_literal •

    $default  reduce using rule 57 (argument)


State 70

   47 var: var • DOT IDENTIFIER
   52 method_call_base: var • DOT method_name LPAREN arguments RPAREN
   56 reshape_operation: var • DOT F_VIEW LPAREN arguments RPAREN
   59 argument: var •

    DOT  shift, and go to state 54

    $default  reduce using rule 59 (argument)


State 71

   61 argument: method_call •

    $default  reduce using rule 61 (argument)


State 72

   60 argument: method_call_base •

    $default  reduce using rule 60 (argument)


State 73

   62 argument: reshape_operation •

    $default  reduce using rule 62 (argument)


State 74

   78 arguments: argument •
   79          | argument • COMMA arguments

    COMMA  shift, and go to state 85

    $default  reduce using rule 78 (arguments)


State 75

   53 method_call_base: F_MAXPOOL2D LPAREN arguments • RPAREN

    RPAREN  shift, and go to state 86


State 76

   54 method_call_base: F_RELU LPAREN arguments • RPAREN

    RPAREN  shift, and go to state 87


State 77

   55 method_call_base: F_VIEW LPAREN arguments • RPAREN

    RPAREN  shift, and go to state 88


State 78

   36 method_name: IDENTIFIER •
   47 var: var DOT IDENTIFIER •

    LPAREN    reduce using rule 36 (method_name)
    $default  reduce using rule 47 (var)


State 79

   56 reshape_operation: var DOT F_VIEW • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 89


State 80

   52 method_call_base: var DOT method_name • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 90


State 81

    4 constructor: DEF INIT LPAREN SELF COMMA param_list • RPAREN COLON super_call layers_definition
    6 param_list: param_list • COMMA IDENTIFIER

    RPAREN  shift, and go to state 91
    COMMA   shift, and go to state 30


State 82

   51 method_call: SELF DOT layer_name LPAREN • arguments RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 74
    arguments          go to state 92


State 83

   63 argument: LPAREN argument • COMMA argument RPAREN
   64         | LPAREN argument • RPAREN

    RPAREN  shift, and go to state 93
    COMMA   shift, and go to state 94


State 84

   23 numeric_literal: MULTIPLY INTEGER •

    $default  reduce using rule 23 (numeric_literal)


State 85

   79 arguments: argument COMMA • arguments

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 74
    arguments          go to state 95


State 86

   53 method_call_base: F_MAXPOOL2D LPAREN arguments RPAREN •

    $default  reduce using rule 53 (method_call_base)


State 87

   54 method_call_base: F_RELU LPAREN arguments RPAREN •

    $default  reduce using rule 54 (method_call_base)


State 88

   55 method_call_base: F_VIEW LPAREN arguments RPAREN •

    $default  reduce using rule 55 (method_call_base)


State 89

   56 reshape_operation: var DOT F_VIEW LPAREN • arguments RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 74
    arguments          go to state 96


State 90

   52 method_call_base: var DOT method_name LPAREN • arguments RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 74
    arguments          go to state 97


State 91

    4 constructor: DEF INIT LPAREN SELF COMMA param_list RPAREN • COLON super_call layers_definition

    COLON  shift, and go to state 98


State 92

   51 method_call: SELF DOT layer_name LPAREN arguments • RPAREN

    RPAREN  shift, and go to state 99


State 93

   64 argument: LPAREN argument RPAREN •

    $default  reduce using rule 64 (argument)


State 94

   63 argument: LPAREN argument COMMA • argument RPAREN

    SELF         shift, and go to state 38
    LPAREN       shift, and go to state 64
    MULTIPLY     shift, and go to state 65
    INTEGER      shift, and go to state 66
    FLOAT        shift, and go to state 67
    STRING       shift, and go to state 68
    IDENTIFIER   shift, and go to state 32
    F_MAXPOOL2D  shift, and go to state 39
    F_RELU       shift, and go to state 40
    F_VIEW       shift, and go to state 41

    numeric_literal    go to state 69
    var                go to state 70
    method_call        go to state 71
    method_call_base   go to state 72
    reshape_operation  go to state 73
    argument           go to state 100


State 95

   79 arguments: argument COMMA arguments •

    $default  reduce using rule 79 (arguments)


State 96

   56 reshape_operation: var DOT F_VIEW LPAREN arguments • RPAREN

    RPAREN  shift, and go to state 101


State 97

   52 method_call_base: var DOT method_name LPAREN arguments • RPAREN

    RPAREN  shift, and go to state 102


State 98

    4 constructor: DEF INIT LPAREN SELF COMMA param_list RPAREN COLON • super_call layers_definition

    SUPER  shift, and go to state 103

    super_call  go to state 104


State 99

   51 method_call: SELF DOT layer_name LPAREN arguments RPAREN •

    $default  reduce using rule 51 (method_call)


State 100

   63 argument: LPAREN argument COMMA argument • RPAREN

    RPAREN  shift, and go to state 105


State 101

   56 reshape_operation: var DOT F_VIEW LPAREN arguments RPAREN •

    $default  reduce using rule 56 (reshape_operation)


State 102

   52 method_call_base: var DOT method_name LPAREN arguments RPAREN •

    $default  reduce using rule 52 (method_call_base)


State 103

    7 super_call: SUPER • LPAREN class_name COMMA SELF RPAREN DOT INIT LPAREN RPAREN

    LPAREN  shift, and go to state 106


State 104

    4 constructor: DEF INIT LPAREN SELF COMMA param_list RPAREN COLON super_call • layers_definition

    SELF  shift, and go to state 107

    $default  reduce using rule 9 (layers_definition)

    layers_definition      go to state 108
    layer_definition_full  go to state 109


State 105

   63 argument: LPAREN argument COMMA argument RPAREN •

    $default  reduce using rule 63 (argument)


State 106

    7 super_call: SUPER LPAREN • class_name COMMA SELF RPAREN DOT INIT LPAREN RPAREN

    IDENTIFIER  shift, and go to state 4

    class_name  go to state 110


State 107

   10 layer_definition_full: SELF • DOT layer_name EQUALS layer_definition

    DOT  shift, and go to state 111


State 108

    4 constructor: DEF INIT LPAREN SELF COMMA param_list RPAREN COLON super_call layers_definition •

    $default  reduce using rule 4 (constructor)


State 109

    8 layers_definition: layer_definition_full • layers_definition

    SELF  shift, and go to state 107

    $default  reduce using rule 9 (layers_definition)

    layers_definition      go to state 112
    layer_definition_full  go to state 109


State 110

    7 super_call: SUPER LPAREN class_name • COMMA SELF RPAREN DOT INIT LPAREN RPAREN

    COMMA  shift, and go to state 113


State 111

   10 layer_definition_full: SELF DOT • layer_name EQUALS layer_definition

    IDENTIFIER  shift, and go to state 62

    layer_name  go to state 114


State 112

    8 layers_definition: layer_definition_full layers_definition •

    $default  reduce using rule 8 (layers_definition)


State 113

    7 super_call: SUPER LPAREN class_name COMMA • SELF RPAREN DOT INIT LPAREN RPAREN

    SELF  shift, and go to state 115


State 114

   10 layer_definition_full: SELF DOT layer_name • EQUALS layer_definition

    EQUALS  shift, and go to state 116


State 115

    7 super_call: SUPER LPAREN class_name COMMA SELF • RPAREN DOT INIT LPAREN RPAREN

    RPAREN  shift, and go to state 117


State 116

   10 layer_definition_full: SELF DOT layer_name EQUALS • layer_definition

    SEQUENTIAL   shift, and go to state 118
    CONV2D       shift, and go to state 119
    BATCHNORM2D  shift, and go to state 120
    RELU         shift, and go to state 121
    MAXPOOL2D    shift, and go to state 122
    LINEAR       shift, and go to state 123
    SOFTMAX      shift, and go to state 124

    layer_definition  go to state 125
    sequential_layer  go to state 126
    layer_type        go to state 127


State 117

    7 super_call: SUPER LPAREN class_name COMMA SELF RPAREN • DOT INIT LPAREN RPAREN

    DOT  shift, and go to state 128


State 118

   65 sequential_layer: SEQUENTIAL • LPAREN sequential_layer_content RPAREN

    LPAREN  shift, and go to state 129


State 119

   71 layer_type: CONV2D •

    $default  reduce using rule 71 (layer_type)


State 120

   72 layer_type: BATCHNORM2D •

    $default  reduce using rule 72 (layer_type)


State 121

   73 layer_type: RELU •

    $default  reduce using rule 73 (layer_type)


State 122

   74 layer_type: MAXPOOL2D •

    $default  reduce using rule 74 (layer_type)


State 123

   75 layer_type: LINEAR •

    $default  reduce using rule 75 (layer_type)


State 124

   76 layer_type: SOFTMAX •

    $default  reduce using rule 76 (layer_type)


State 125

   10 layer_definition_full: SELF DOT layer_name EQUALS layer_definition •

    $default  reduce using rule 10 (layer_definition_full)


State 126

   12 layer_definition: sequential_layer •

    $default  reduce using rule 12 (layer_definition)


State 127

   11 layer_definition: layer_type • layer_args

    LPAREN  shift, and go to state 130

    layer_args  go to state 131


State 128

    7 super_call: SUPER LPAREN class_name COMMA SELF RPAREN DOT • INIT LPAREN RPAREN

    INIT  shift, and go to state 132


State 129

   65 sequential_layer: SEQUENTIAL LPAREN • sequential_layer_content RPAREN

    LPAREN       shift, and go to state 133
    SEQUENTIAL   shift, and go to state 118
    CONV2D       shift, and go to state 119
    BATCHNORM2D  shift, and go to state 120
    RELU         shift, and go to state 121
    MAXPOOL2D    shift, and go to state 122
    LINEAR       shift, and go to state 123
    SOFTMAX      shift, and go to state 124

    $default  reduce using rule 70 (sequential_layer_content)

    layer_definition          go to state 134
    sequential_layer          go to state 126
    sequential_layer_content  go to state 135
    layer_type                go to state 127


State 130

   13 layer_args: LPAREN • nested_layer_params RPAREN

    LPAREN      shift, and go to state 136
    MULTIPLY    shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    STRING      shift, and go to state 137
    IDENTIFIER  shift, and go to state 138

    $default  reduce using rule 15 (nested_layer_params)

    nested_layer_params  go to state 139
    layer_param_list     go to state 140
    layer_param          go to state 141
    param_name           go to state 142
    numeric_literal      go to state 143
    numeric_value        go to state 144
    value                go to state 145
    var                  go to state 146


State 131

   11 layer_definition: layer_type layer_args •

    $default  reduce using rule 11 (layer_definition)


State 132

    7 super_call: SUPER LPAREN class_name COMMA SELF RPAREN DOT INIT • LPAREN RPAREN

    LPAREN  shift, and go to state 147


State 133

   68 sequential_layer_content: LPAREN • layer_definition RPAREN
   69                         | LPAREN • layer_definition RPAREN COMMA sequential_layer_content

    SEQUENTIAL   shift, and go to state 118
    CONV2D       shift, and go to state 119
    BATCHNORM2D  shift, and go to state 120
    RELU         shift, and go to state 121
    MAXPOOL2D    shift, and go to state 122
    LINEAR       shift, and go to state 123
    SOFTMAX      shift, and go to state 124

    layer_definition  go to state 148
    sequential_layer  go to state 126
    layer_type        go to state 127


State 134

   66 sequential_layer_content: layer_definition •
   67                         | layer_definition • COMMA sequential_layer_content

    COMMA  shift, and go to state 149

    $default  reduce using rule 66 (sequential_layer_content)


State 135

   65 sequential_layer: SEQUENTIAL LPAREN sequential_layer_content • RPAREN

    RPAREN  shift, and go to state 150


State 136

   27 numeric_value: LPAREN • arithmetic_expression RPAREN

    MULTIPLY  shift, and go to state 65
    INTEGER   shift, and go to state 66
    FLOAT     shift, and go to state 67

    numeric_literal        go to state 151
    arithmetic_expression  go to state 152


State 137

   29 value: STRING •

    $default  reduce using rule 29 (value)


State 138

   20 param_name: IDENTIFIER •
   46 var: IDENTIFIER •

    EQUALS    reduce using rule 20 (param_name)
    $default  reduce using rule 46 (var)


State 139

   13 layer_args: LPAREN nested_layer_params • RPAREN

    RPAREN  shift, and go to state 153


State 140

   14 nested_layer_params: layer_param_list •
   17 layer_param_list: layer_param_list • COMMA layer_param

    COMMA  shift, and go to state 154

    $default  reduce using rule 14 (nested_layer_params)


State 141

   16 layer_param_list: layer_param •

    $default  reduce using rule 16 (layer_param_list)


State 142

   18 layer_param: param_name • EQUALS value

    EQUALS  shift, and go to state 155


State 143

   26 numeric_value: numeric_literal •

    $default  reduce using rule 26 (numeric_value)


State 144

   28 value: numeric_value •

    $default  reduce using rule 28 (value)


State 145

   19 layer_param: value •

    $default  reduce using rule 19 (layer_param)


State 146

   30 value: var •
   47 var: var • DOT IDENTIFIER

    DOT  shift, and go to state 48

    $default  reduce using rule 30 (value)


State 147

    7 super_call: SUPER LPAREN class_name COMMA SELF RPAREN DOT INIT LPAREN • RPAREN

    RPAREN  shift, and go to state 156


State 148

   68 sequential_layer_content: LPAREN layer_definition • RPAREN
   69                         | LPAREN layer_definition • RPAREN COMMA sequential_layer_content

    RPAREN  shift, and go to state 157


State 149

   67 sequential_layer_content: layer_definition COMMA • sequential_layer_content

    LPAREN       shift, and go to state 133
    SEQUENTIAL   shift, and go to state 118
    CONV2D       shift, and go to state 119
    BATCHNORM2D  shift, and go to state 120
    RELU         shift, and go to state 121
    MAXPOOL2D    shift, and go to state 122
    LINEAR       shift, and go to state 123
    SOFTMAX      shift, and go to state 124

    $default  reduce using rule 70 (sequential_layer_content)

    layer_definition          go to state 134
    sequential_layer          go to state 126
    sequential_layer_content  go to state 158
    layer_type                go to state 127


State 150

   65 sequential_layer: SEQUENTIAL LPAREN sequential_layer_content RPAREN •

    $default  reduce using rule 65 (sequential_layer)


State 151

   24 arithmetic_expression: numeric_literal •

    $default  reduce using rule 24 (arithmetic_expression)


State 152

   25 arithmetic_expression: arithmetic_expression • MULTIPLY numeric_literal
   27 numeric_value: LPAREN arithmetic_expression • RPAREN

    RPAREN    shift, and go to state 159
    MULTIPLY  shift, and go to state 160


State 153

   13 layer_args: LPAREN nested_layer_params RPAREN •

    $default  reduce using rule 13 (layer_args)


State 154

   17 layer_param_list: layer_param_list COMMA • layer_param

    LPAREN      shift, and go to state 136
    MULTIPLY    shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    STRING      shift, and go to state 137
    IDENTIFIER  shift, and go to state 138

    layer_param      go to state 161
    param_name       go to state 142
    numeric_literal  go to state 143
    numeric_value    go to state 144
    value            go to state 145
    var              go to state 146


State 155

   18 layer_param: param_name EQUALS • value

    LPAREN      shift, and go to state 136
    MULTIPLY    shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    STRING      shift, and go to state 137
    IDENTIFIER  shift, and go to state 32

    numeric_literal  go to state 143
    numeric_value    go to state 144
    value            go to state 162
    var              go to state 146


State 156

    7 super_call: SUPER LPAREN class_name COMMA SELF RPAREN DOT INIT LPAREN RPAREN •

    $default  reduce using rule 7 (super_call)


State 157

   68 sequential_layer_content: LPAREN layer_definition RPAREN •
   69                         | LPAREN layer_definition RPAREN • COMMA sequential_layer_content

    COMMA  shift, and go to state 163

    $default  reduce using rule 68 (sequential_layer_content)


State 158

   67 sequential_layer_content: layer_definition COMMA sequential_layer_content •

    $default  reduce using rule 67 (sequential_layer_content)


State 159

   27 numeric_value: LPAREN arithmetic_expression RPAREN •

    $default  reduce using rule 27 (numeric_value)


State 160

   25 arithmetic_expression: arithmetic_expression MULTIPLY • numeric_literal

    MULTIPLY  shift, and go to state 65
    INTEGER   shift, and go to state 66
    FLOAT     shift, and go to state 67

    numeric_literal  go to state 164


State 161

   17 layer_param_list: layer_param_list COMMA layer_param •

    $default  reduce using rule 17 (layer_param_list)


State 162

   18 layer_param: param_name EQUALS value •

    $default  reduce using rule 18 (layer_param)


State 163

   69 sequential_layer_content: LPAREN layer_definition RPAREN COMMA • sequential_layer_content

    LPAREN       shift, and go to state 133
    SEQUENTIAL   shift, and go to state 118
    CONV2D       shift, and go to state 119
    BATCHNORM2D  shift, and go to state 120
    RELU         shift, and go to state 121
    MAXPOOL2D    shift, and go to state 122
    LINEAR       shift, and go to state 123
    SOFTMAX      shift, and go to state 124

    $default  reduce using rule 70 (sequential_layer_content)

    layer_definition          go to state 134
    sequential_layer          go to state 126
    sequential_layer_content  go to state 165
    layer_type                go to state 127


State 164

   25 arithmetic_expression: arithmetic_expression MULTIPLY numeric_literal •

    $default  reduce using rule 25 (arithmetic_expression)


State 165

   69 sequential_layer_content: LPAREN layer_definition RPAREN COMMA sequential_layer_content •

    $default  reduce using rule 69 (sequential_layer_content)
